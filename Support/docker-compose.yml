version: '3.5'
services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
      network: host
    container_name: support-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./media/:/code/media
      - ./static/:/code/static
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - web

  web:
    container_name: support-web
    build: .
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - 8000:8000
    env_file:
      - ../.env
    depends_on:
      - postgres



  postgres:
    image: postgres:13.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=support
    ports:
      - 5500:5432
    env_file:
      - ../.env

  redis:
    image: redis
    container_name: support-redis
    restart: always


  celery:
    container_name: support-celery
    build: .
    command: celery -A config worker --loglevel=INFO
    volumes:
      - .:/code
    env_file:
      - ../.env
    depends_on:
      - postgres
      - web
      - redis

  flower:
    build: .
    container_name: support-flower
    command: celery flower -A core --port=5555 --broker=redis://redis:6379/0
    ports:
      - 5555:5555
    env_file:
      - ../.env
    depends_on:
      - web
      - celery
      - redis
volumes:
  postgres_data:
  letsencrypt:




